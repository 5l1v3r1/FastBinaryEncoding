// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding

@file:Suppress("UnusedImport", "unused")

package protoex.fbe

import java.io.*
import java.lang.*
import java.lang.reflect.*
import java.math.*
import java.nio.charset.*
import java.time.*
import java.util.*

import fbe.*
import protoex.*

import com.google.gson.*

// Fast Binary Encoding protoex JSON class
object Json
{
    // Get the JSON engine
    val engine: Gson = register(GsonBuilder()).create()

    @Suppress("MemberVisibilityCanBePrivate")
    fun register(builder: GsonBuilder): GsonBuilder
    {
        fbe.Json.register(builder)
        proto.fbe.Json.register(builder)
        builder.registerTypeAdapter(OrderSide::class.java, OrderSideJson())
        builder.registerTypeAdapter(OrderType::class.java, OrderTypeJson())
        builder.registerTypeAdapter(StateEx::class.java, StateExJson())
        return builder
    }
}
