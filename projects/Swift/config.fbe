/*
   Configuration protocol
*/

// Domain declaration
domain com.finstek.proto

// Package declaration
package config offset 1000

// Protocol version
version 0.4

// Package imports
import core

// Configuration version request
[request]
[response(ConfigVersionResponse)]
[reject(*core.Reject)]
message ConfigVersionRequest : core.Request
{
}

// Configuration version response
message ConfigVersionResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;
}

// Configuration value
struct ConfigValue
{
    // Configuration value content as a bytes buffer
    bytes Content;
    // Configuration value version as a timestamp
    timestamp Version;
}

// Configuration snapshot request
[request]
[response(ConfigSnapshotResponse)]
[reject(*core.Reject)]
message ConfigSnapshotRequest : core.Request
{
    // Configuration keys separated by semicolons
    string Keys;
}

// Configuration snapshot response
message ConfigSnapshotResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Configuration keys separated by semicolons
    string Keys;
    // Configuration snapshot
    ConfigValue<string> Snapshot;
}

// Configuration update type
enum ConfigUpdateType
{
    UPDATE;
    DELETE;
}

// Configuration update
struct ConfigUpdate
{
    // Configuration update type
    ConfigUpdateType UpdateType;
    // Configuration key
    string Key;
    // Configuration value content as a bytes buffer
    bytes Content;
}

// Configuration change type
enum ConfigChangeType
{
    INSERT;
    UPDATE;
    DELETE;
}

// Configuration change
struct ConfigChange
{
    // Configuration key
    string Key;
    // Configuration change type
    ConfigChangeType ChangeType;
    // Configuration previous value
    ConfigValue Previous;
    // Configuration current value
    ConfigValue Current;
}

// Configuration update request
[request]
[response(ConfigUpdateResponse)]
[reject(*core.Reject, ConfigUpdateReject)]
message ConfigUpdateRequest : core.Request
{
    // Configuration update version as a timestamp
    timestamp UpdateVersion;

    // Configuration updates
    ConfigUpdate[] Updates;
    // Configuration update comment
    string Comment;
}

// Configuration update response
message ConfigUpdateResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Configuration changes
    ConfigChange[] Changes;
    // Configuration update comment
    string Comment;
}

// Configuration update reject
message ConfigUpdateReject : core.Reject
{
    // Configuration update version as a timestamp
    timestamp UpdateVersion;
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Configuration update comment
    string Comment;
}

// Configuration update notification
message ConfigUpdateNotify
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Configuration changes
    ConfigChange[] Changes;
    // Configuration update comment
    string Comment;
}

// Configuration refresh request
[request]
[response(ConfigRefreshResponse)]
[reject(*core.Reject)]
message ConfigRefreshRequest : core.Request
{
}

// Configuration refresh response
message ConfigRefreshResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;
}

// Configuration history record
struct ConfigHistory
{
    // History record Id
    string HistoryId;
    // History record timestamp
    timestamp Timestamp;
    // History record comment
    string Comment;
}

// Configuration history request
[request]
[response(ConfigHistoryResponse)]
[reject(*core.Reject)]
message ConfigHistoryRequest : core.Request
{
    // Limit the number of history records (default is top 100 history records)
    uint32 Count = 100;
}

// Configuration history response
message ConfigHistoryResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Configuration history records
    ConfigHistory[] History;
}

// Configuration rollback request
[request]
[response(ConfigRollbackResponse)]
[reject(*core.Reject)]
message ConfigRollbackRequest : core.Request
{
    // History record Id
    string HistoryId;
}

// Configuration rollback response
message ConfigRollbackResponse : core.Response
{
    // Configuration actual version as a timestamp
    timestamp ActualVersion;

    // Restored configuration history record or null if failed
    ConfigHistory? History;
}
