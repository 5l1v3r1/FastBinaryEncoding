// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: fbe
// Version: 1.1.0.0

package fbe

// Receive message interface
type OnReceive interface {
    OnReceive(fbeType int, buffer []byte) (bool, error)
}

// Receive message function
type OnReceiveFunc func(fbeType int, buffer []byte) (bool, error)
func (f OnReceiveFunc) OnReceive(fbeType int, buffer []byte) (bool, error) {
    return f(fbeType, buffer)
}

// Receive log message interface
type OnReceiveLog interface {
    OnReceiveLog(message string) error
}

// Receive log message function
type OnReceiveLogFunc func(message string) error
func (f OnReceiveLogFunc) OnReceiveLog(message string) error {
    return f(message)
}

// Fast Binary Encoding base receiver
type Receiver struct {
    // Receiver bytes buffer
    buffer *Buffer
    // Logging flag
    logging bool
    // Final protocol flag
    final bool

    // Receive message handler
    OnReceiveHandler OnReceive
    // Receive log message handler
    OnReceiveLogHandler OnReceiveLog
}

// Create a new base receiver
func NewReceiver(buffer *Buffer, final bool) *Receiver {
    receiver := &Receiver{buffer: buffer, logging: false, final: final}
    receiver.OnReceiveFunc(func(fbeType int, buffer []byte) (bool, error) { panic("receive handler is not provided") })
    receiver.OnReceiveLogFunc(func(message string) error { return nil })
    return receiver
}

// Get the bytes buffer
func (r *Receiver) Buffer() *Buffer { return r.buffer }

// Get the final protocol flag
func (r *Receiver) Final() bool { return r.final }

// Get the logging flag
func (r *Receiver) Logging() bool { return r.logging }
// Set the logging flag
func (r *Receiver) SetLogging(logging bool) { r.logging = logging }

// Receive message handler
func (r *Receiver) OnReceive(handler OnReceive) { r.OnReceiveHandler = handler }
// Receive message handler function
func (r *Receiver) OnReceiveFunc(function func(fbeType int, buffer []byte) (bool, error)) { r.OnReceiveHandler = OnReceiveFunc(function) }
// Receive log message handler
func (r *Receiver) OnReceiveLog(handler OnReceiveLog) { r.OnReceiveLogHandler = handler }
// Receive log message handler function
func (r *Receiver) OnReceiveLogFunc(function func(message string) error) { r.OnReceiveLogHandler = OnReceiveLogFunc(function) }

// Receive data
func (r *Receiver) Receive(buffer []byte) error {
    return nil
}
