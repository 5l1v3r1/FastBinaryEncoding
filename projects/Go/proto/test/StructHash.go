// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: test.fbe
// Version: 1.1.0.0

package test

import "strconv"
import "strings"
import "encoding/json"
import "../fbe"
import "../proto"

// Workaround for Go unused imports issue
var _ = fbe.Version
var _ = proto.Version

// StructHash key
type StructHashKey struct {
}

// Convert StructHash flags key to string
func (k StructHashKey) String() string {
    var sb strings.Builder
    return sb.String()
}

// StructHash struct
type StructHash struct {
    F1 map[string]byte
    F2 map[string]*byte
    F3 map[string][]byte
    F4 map[string]*[]byte
    F5 map[string]EnumSimple
    F6 map[string]*EnumSimple
    F7 map[string]FlagsSimple
    F8 map[string]*FlagsSimple
    F9 map[string]StructSimple
    F10 map[string]*StructSimple
}

// Create a new StructHash struct from JSON
func NewStructHashFromJSON(buffer []byte) (*StructHash, error) {
    var result StructHash
    err := json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Get the struct key
func (s StructHash) Key() StructHashKey {
    return StructHashKey{
    }
}

// Convert struct to string
func (s StructHash) String() string {
    var sb strings.Builder
    return sb.String()
}

// Convert struct to JSON
func (s StructHash) JSON() ([]byte, error) {
    return json.Marshal(s)
}
