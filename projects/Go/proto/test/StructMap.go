// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: test.fbe
// Version: 1.1.0.0

package test

import "strconv"
import "strings"
import "encoding/json"
import "../fbe"
import "../proto"

// Workaround for Go unused imports issue
var _ = fbe.Version
var _ = proto.Version

// StructMap key
type StructMapKey struct {
}

// Convert StructMap flags key to string
func (k StructMapKey) String() string {
    var sb strings.Builder
    return sb.String()
}

// StructMap struct
type StructMap struct {
    F1 map[int32]byte
    F2 map[int32]*byte
    F3 map[int32][]byte
    F4 map[int32]*[]byte
    F5 map[int32]EnumSimple
    F6 map[int32]*EnumSimple
    F7 map[int32]FlagsSimple
    F8 map[int32]*FlagsSimple
    F9 map[int32]StructSimple
    F10 map[int32]*StructSimple
}

// Create a new StructMap struct from JSON
func NewStructMapFromJSON(buffer []byte) (*StructMap, error) {
    var result StructMap
    err := json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Get the struct key
func (s StructMap) Key() StructMapKey {
    return StructMapKey{
    }
}

// Convert struct to string
func (s StructMap) String() string {
    var sb strings.Builder
    return sb.String()
}

// Convert struct to JSON
func (s StructMap) JSON() ([]byte, error) {
    return json.Marshal(s)
}
