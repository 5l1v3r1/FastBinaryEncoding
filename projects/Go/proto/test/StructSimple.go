// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: test.fbe
// Version: 1.1.0.0

package test

import "strconv"
import "strings"
import "encoding/json"
import "../fbe"
import "../proto"

// Workaround for Go unused imports issue
var _ = fbe.Version
var _ = proto.Version

// StructSimple key
type StructSimpleKey struct {
    Uid int32
}

// Convert StructSimple flags key to string
func (k StructSimpleKey) String() string {
    var sb strings.Builder
    return sb.String()
}

// StructSimple struct
type StructSimple struct {
    Uid int32
    F1 bool
    F2 bool
    F3 byte
    F4 byte
    F5 rune
    F6 rune
    F7 rune
    F8 rune
    F9 int8
    F10 int8
    F11 uint8
    F12 uint8
    F13 int16
    F14 int16
    F15 uint16
    F16 uint16
    F17 int32
    F18 int32
    F19 uint32
    F20 uint32
    F21 int64
    F22 int64
    F23 uint64
    F24 uint64
    F25 float32
    F26 float32
    F27 float64
    F28 float64
    F29 fbe.Decimal
    F30 fbe.Decimal
    F31 string
    F32 string
    F33 fbe.Timestamp
    F34 fbe.Timestamp
    F35 fbe.Timestamp
    F36 fbe.UUID
    F37 fbe.UUID
    F38 fbe.UUID
    F39 proto.OrderSide
    F40 proto.OrderType
    F41 proto.Order
    F42 proto.Balance
    F43 proto.State
    F44 proto.Account
}

// Create a new StructSimple struct from JSON
func NewStructSimpleFromJSON(buffer []byte) (*StructSimple, error) {
    var result StructSimple
    err := json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Get the struct key
func (s StructSimple) Key() StructSimpleKey {
    return StructSimpleKey{
        Uid: s.Uid,
    }
}

// Convert struct to string
func (s StructSimple) String() string {
    var sb strings.Builder
    return sb.String()
}

// Convert struct to JSON
func (s StructSimple) JSON() ([]byte, error) {
    return json.Marshal(s)
}
