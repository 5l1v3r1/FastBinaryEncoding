// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: protoex.fbe
// Version: 1.1.0.0

package protoex
import _ "../proto"

import "encoding/json"

type OrderType byte

const (
    OrderType_market = OrderType(0) + 0
    OrderType_limit = OrderType(0) + 1
    OrderType_stop = OrderType(0) + 2
    OrderType_stoplimit = OrderType(0) + 3
)

func (e OrderType) String() string {
    switch e {
    case OrderType_market:
        return "market"
    case OrderType_limit:
        return "limit"
    case OrderType_stop:
        return "stop"
    case OrderType_stoplimit:
        return "stoplimit"
    }
    return "<unknown>"
}

func (e OrderType) MarshalJSON() ([]byte, error) {
    return json.Marshal(byte(e))
}

func (e *OrderType) UnmarshalJSON(b []byte) error {
    var value byte
    err := json.Unmarshal(b, &value)
    if err != nil {
        return err
    }
    *e = OrderType(value)
    return nil
}
