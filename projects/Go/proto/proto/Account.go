// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: proto.fbe
// Version: 1.1.0.0

package proto

import "strings"
import "../fbe"

// Workaround for Go unused imports issue
var _ = fbe.Version

// Account key
type AccountKey struct {
    Uid int32
}

// Convert Account flags key to string
func (k AccountKey) String() string {
    var sb strings.Builder
    return sb.String()
}

// Account struct
type Account struct {
    Uid int32 `json:"uid"`
    Name string `json:"name"`
    State State `json:"state"`
    Wallet Balance `json:"wallet"`
    Asset *Balance `json:"asset"`
    Orders []Order `json:"orders"`
}

// Create a new Account struct
func NewAccount() *Account {
    return &Account{
        Uid: 0,
        Name: "",
        State: State_initialized | State_bad,
        Wallet: *NewBalance(),
        Asset: nil,
        Orders: make([]Order, 0),
    }
}

// Create a new Account struct from JSON
func NewAccountFromJSON(buffer []byte) (*Account, error) {
    result := *NewAccount()
    err := fbe.Json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Struct shallow copy
func (s Account) Copy() *Account {
    var result = s
    return &result
}

// Struct deep clone
func (s Account) Clone() *Account {
    var result = s
    return &result
}

// Get the struct key
func (s Account) Key() AccountKey {
    return AccountKey{
        Uid: s.Uid,
    }
}

// Convert struct to optional
func (s Account) Optional() *Account {
    return &s
}

// Convert struct to string
func (s Account) String() string {
    var sb strings.Builder
    return sb.String()
}

// Convert struct to JSON
func (s Account) JSON() ([]byte, error) {
    return fbe.Json.Marshal(&s)
}
