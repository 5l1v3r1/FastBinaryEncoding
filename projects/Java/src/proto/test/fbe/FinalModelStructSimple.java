// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding

package test.fbe;

import java.io.*;
import java.lang.*;
import java.lang.reflect.*;
import java.math.*;
import java.nio.charset.*;
import java.time.*;
import java.util.*;
import javafx.util.*;

import fbe.*;
import test.*;

// Fast Binary Encoding StructSimple final model class
public final class FinalModelStructSimple extends FinalModel
{
    public final FinalModelInt32 uid;
    public final FinalModelBoolean f1;
    public final FinalModelBoolean f2;
    public final FinalModelByte f3;
    public final FinalModelByte f4;
    public final FinalModelChar f5;
    public final FinalModelChar f6;
    public final FinalModelWChar f7;
    public final FinalModelWChar f8;
    public final FinalModelInt8 f9;
    public final FinalModelInt8 f10;
    public final FinalModelInt8 f11;
    public final FinalModelInt8 f12;
    public final FinalModelInt16 f13;
    public final FinalModelInt16 f14;
    public final FinalModelInt16 f15;
    public final FinalModelInt16 f16;
    public final FinalModelInt32 f17;
    public final FinalModelInt32 f18;
    public final FinalModelInt32 f19;
    public final FinalModelInt32 f20;
    public final FinalModelInt64 f21;
    public final FinalModelInt64 f22;
    public final FinalModelInt64 f23;
    public final FinalModelInt64 f24;
    public final FinalModelFloat f25;
    public final FinalModelFloat f26;
    public final FinalModelDouble f27;
    public final FinalModelDouble f28;
    public final FinalModelDecimal f29;
    public final FinalModelDecimal f30;
    public final FinalModelString f31;
    public final FinalModelString f32;
    public final FinalModelTimestamp f33;
    public final FinalModelTimestamp f34;
    public final FinalModelTimestamp f35;
    public final FinalModelUUID f36;
    public final FinalModelUUID f37;
    public final FinalModelUUID f38;
    public final proto.fbe.FinalModelOrderSide f39;
    public final proto.fbe.FinalModelOrderType f40;
    public final proto.fbe.FinalModelOrder f41;
    public final proto.fbe.FinalModelBalance f42;
    public final proto.fbe.FinalModelState f43;
    public final proto.fbe.FinalModelAccount f44;

    public FinalModelStructSimple(Buffer buffer, long offset)
    {
        super(buffer, offset);
        uid = new FinalModelInt32(buffer, 0);
        f1 = new FinalModelBoolean(buffer, 0);
        f2 = new FinalModelBoolean(buffer, 0);
        f3 = new FinalModelByte(buffer, 0);
        f4 = new FinalModelByte(buffer, 0);
        f5 = new FinalModelChar(buffer, 0);
        f6 = new FinalModelChar(buffer, 0);
        f7 = new FinalModelWChar(buffer, 0);
        f8 = new FinalModelWChar(buffer, 0);
        f9 = new FinalModelInt8(buffer, 0);
        f10 = new FinalModelInt8(buffer, 0);
        f11 = new FinalModelInt8(buffer, 0);
        f12 = new FinalModelInt8(buffer, 0);
        f13 = new FinalModelInt16(buffer, 0);
        f14 = new FinalModelInt16(buffer, 0);
        f15 = new FinalModelInt16(buffer, 0);
        f16 = new FinalModelInt16(buffer, 0);
        f17 = new FinalModelInt32(buffer, 0);
        f18 = new FinalModelInt32(buffer, 0);
        f19 = new FinalModelInt32(buffer, 0);
        f20 = new FinalModelInt32(buffer, 0);
        f21 = new FinalModelInt64(buffer, 0);
        f22 = new FinalModelInt64(buffer, 0);
        f23 = new FinalModelInt64(buffer, 0);
        f24 = new FinalModelInt64(buffer, 0);
        f25 = new FinalModelFloat(buffer, 0);
        f26 = new FinalModelFloat(buffer, 0);
        f27 = new FinalModelDouble(buffer, 0);
        f28 = new FinalModelDouble(buffer, 0);
        f29 = new FinalModelDecimal(buffer, 0);
        f30 = new FinalModelDecimal(buffer, 0);
        f31 = new FinalModelString(buffer, 0);
        f32 = new FinalModelString(buffer, 0);
        f33 = new FinalModelTimestamp(buffer, 0);
        f34 = new FinalModelTimestamp(buffer, 0);
        f35 = new FinalModelTimestamp(buffer, 0);
        f36 = new FinalModelUUID(buffer, 0);
        f37 = new FinalModelUUID(buffer, 0);
        f38 = new FinalModelUUID(buffer, 0);
        f39 = new proto.fbe.FinalModelOrderSide(buffer, 0);
        f40 = new proto.fbe.FinalModelOrderType(buffer, 0);
        f41 = new proto.fbe.FinalModelOrder(buffer, 0);
        f42 = new proto.fbe.FinalModelBalance(buffer, 0);
        f43 = new proto.fbe.FinalModelState(buffer, 0);
        f44 = new proto.fbe.FinalModelAccount(buffer, 0);
    }

    // Get the allocation size
    public long FBEAllocationSize(StructSimple fbeValue)
    {
        long fbeResult = 0
            + uid.FBEAllocationSize(fbeValue.uid)
            + f1.FBEAllocationSize(fbeValue.f1)
            + f2.FBEAllocationSize(fbeValue.f2)
            + f3.FBEAllocationSize(fbeValue.f3)
            + f4.FBEAllocationSize(fbeValue.f4)
            + f5.FBEAllocationSize(fbeValue.f5)
            + f6.FBEAllocationSize(fbeValue.f6)
            + f7.FBEAllocationSize(fbeValue.f7)
            + f8.FBEAllocationSize(fbeValue.f8)
            + f9.FBEAllocationSize(fbeValue.f9)
            + f10.FBEAllocationSize(fbeValue.f10)
            + f11.FBEAllocationSize(fbeValue.f11)
            + f12.FBEAllocationSize(fbeValue.f12)
            + f13.FBEAllocationSize(fbeValue.f13)
            + f14.FBEAllocationSize(fbeValue.f14)
            + f15.FBEAllocationSize(fbeValue.f15)
            + f16.FBEAllocationSize(fbeValue.f16)
            + f17.FBEAllocationSize(fbeValue.f17)
            + f18.FBEAllocationSize(fbeValue.f18)
            + f19.FBEAllocationSize(fbeValue.f19)
            + f20.FBEAllocationSize(fbeValue.f20)
            + f21.FBEAllocationSize(fbeValue.f21)
            + f22.FBEAllocationSize(fbeValue.f22)
            + f23.FBEAllocationSize(fbeValue.f23)
            + f24.FBEAllocationSize(fbeValue.f24)
            + f25.FBEAllocationSize(fbeValue.f25)
            + f26.FBEAllocationSize(fbeValue.f26)
            + f27.FBEAllocationSize(fbeValue.f27)
            + f28.FBEAllocationSize(fbeValue.f28)
            + f29.FBEAllocationSize(fbeValue.f29)
            + f30.FBEAllocationSize(fbeValue.f30)
            + f31.FBEAllocationSize(fbeValue.f31)
            + f32.FBEAllocationSize(fbeValue.f32)
            + f33.FBEAllocationSize(fbeValue.f33)
            + f34.FBEAllocationSize(fbeValue.f34)
            + f35.FBEAllocationSize(fbeValue.f35)
            + f36.FBEAllocationSize(fbeValue.f36)
            + f37.FBEAllocationSize(fbeValue.f37)
            + f38.FBEAllocationSize(fbeValue.f38)
            + f39.FBEAllocationSize(fbeValue.f39)
            + f40.FBEAllocationSize(fbeValue.f40)
            + f41.FBEAllocationSize(fbeValue.f41)
            + f42.FBEAllocationSize(fbeValue.f42)
            + f43.FBEAllocationSize(fbeValue.f43)
            + f44.FBEAllocationSize(fbeValue.f44)
            ;
        return fbeResult;
    }

    // Get the field type
    public static final long FBETypeConst = 110;
    public long FBEType() { return FBETypeConst; }

    // Check if the struct value is valid
    @Override
    public long verify()
    {
        _buffer.shift(FBEOffset());
        long fbeResult = verifyFields();
        _buffer.unshift(FBEOffset());
        return fbeResult;
    }

    // Check if the struct fields are valid
    public long verifyFields()
    {
        long fbeCurrentOffset = 0;
        long fbeFieldSize = 0;

        uid.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = uid.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f1.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f1.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f2.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f2.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f3.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f3.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f4.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f4.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f5.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f5.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f6.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f6.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f7.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f7.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f8.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f8.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f9.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f9.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f10.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f10.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f11.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f11.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f12.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f12.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f13.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f13.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f14.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f14.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f15.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f15.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f16.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f16.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f17.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f17.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f18.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f18.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f19.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f19.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f20.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f20.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f21.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f21.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f22.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f22.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f23.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f23.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f24.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f24.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f25.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f25.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f26.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f26.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f27.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f27.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f28.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f28.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f29.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f29.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f30.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f30.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f31.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f31.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f32.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f32.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f33.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f33.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f34.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f34.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f35.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f35.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f36.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f36.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f37.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f37.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f38.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f38.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f39.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f39.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f40.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f40.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f41.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f41.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f42.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f42.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f43.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f43.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        f44.FBEOffset(fbeCurrentOffset);
        fbeFieldSize = f44.verify();
        if (fbeFieldSize == Long.MAX_VALUE)
            return Long.MAX_VALUE;
        fbeCurrentOffset += fbeFieldSize;

        return fbeCurrentOffset;
    }

    // Get the struct value
    public StructSimple get(Size fbeSize) { return get(fbeSize, new StructSimple()); }
    public StructSimple get(Size fbeSize, StructSimple fbeValue)
    {
        _buffer.shift(FBEOffset());
        fbeSize.value = getFields(fbeValue);
        _buffer.unshift(FBEOffset());
        return fbeValue;
    }

    // Get the struct fields values
    public long getFields(StructSimple fbeValue)
    {
        long fbeCurrentOffset = 0;
        long fbeCurrentSize = 0;
        var fbeFieldSize = new Size(0);

        uid.FBEOffset(fbeCurrentOffset);
        fbeValue.uid = uid.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f1.FBEOffset(fbeCurrentOffset);
        fbeValue.f1 = f1.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f2.FBEOffset(fbeCurrentOffset);
        fbeValue.f2 = f2.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f3.FBEOffset(fbeCurrentOffset);
        fbeValue.f3 = f3.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f4.FBEOffset(fbeCurrentOffset);
        fbeValue.f4 = f4.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f5.FBEOffset(fbeCurrentOffset);
        fbeValue.f5 = f5.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f6.FBEOffset(fbeCurrentOffset);
        fbeValue.f6 = f6.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f7.FBEOffset(fbeCurrentOffset);
        fbeValue.f7 = f7.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f8.FBEOffset(fbeCurrentOffset);
        fbeValue.f8 = f8.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f9.FBEOffset(fbeCurrentOffset);
        fbeValue.f9 = f9.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f10.FBEOffset(fbeCurrentOffset);
        fbeValue.f10 = f10.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f11.FBEOffset(fbeCurrentOffset);
        fbeValue.f11 = f11.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f12.FBEOffset(fbeCurrentOffset);
        fbeValue.f12 = f12.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f13.FBEOffset(fbeCurrentOffset);
        fbeValue.f13 = f13.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f14.FBEOffset(fbeCurrentOffset);
        fbeValue.f14 = f14.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f15.FBEOffset(fbeCurrentOffset);
        fbeValue.f15 = f15.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f16.FBEOffset(fbeCurrentOffset);
        fbeValue.f16 = f16.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f17.FBEOffset(fbeCurrentOffset);
        fbeValue.f17 = f17.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f18.FBEOffset(fbeCurrentOffset);
        fbeValue.f18 = f18.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f19.FBEOffset(fbeCurrentOffset);
        fbeValue.f19 = f19.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f20.FBEOffset(fbeCurrentOffset);
        fbeValue.f20 = f20.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f21.FBEOffset(fbeCurrentOffset);
        fbeValue.f21 = f21.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f22.FBEOffset(fbeCurrentOffset);
        fbeValue.f22 = f22.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f23.FBEOffset(fbeCurrentOffset);
        fbeValue.f23 = f23.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f24.FBEOffset(fbeCurrentOffset);
        fbeValue.f24 = f24.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f25.FBEOffset(fbeCurrentOffset);
        fbeValue.f25 = f25.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f26.FBEOffset(fbeCurrentOffset);
        fbeValue.f26 = f26.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f27.FBEOffset(fbeCurrentOffset);
        fbeValue.f27 = f27.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f28.FBEOffset(fbeCurrentOffset);
        fbeValue.f28 = f28.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f29.FBEOffset(fbeCurrentOffset);
        fbeValue.f29 = f29.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f30.FBEOffset(fbeCurrentOffset);
        fbeValue.f30 = f30.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f31.FBEOffset(fbeCurrentOffset);
        fbeValue.f31 = f31.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f32.FBEOffset(fbeCurrentOffset);
        fbeValue.f32 = f32.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f33.FBEOffset(fbeCurrentOffset);
        fbeValue.f33 = f33.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f34.FBEOffset(fbeCurrentOffset);
        fbeValue.f34 = f34.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f35.FBEOffset(fbeCurrentOffset);
        fbeValue.f35 = f35.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f36.FBEOffset(fbeCurrentOffset);
        fbeValue.f36 = f36.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f37.FBEOffset(fbeCurrentOffset);
        fbeValue.f37 = f37.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f38.FBEOffset(fbeCurrentOffset);
        fbeValue.f38 = f38.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f39.FBEOffset(fbeCurrentOffset);
        fbeValue.f39 = f39.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f40.FBEOffset(fbeCurrentOffset);
        fbeValue.f40 = f40.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f41.FBEOffset(fbeCurrentOffset);
        fbeValue.f41 = f41.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f42.FBEOffset(fbeCurrentOffset);
        fbeValue.f42 = f42.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f43.FBEOffset(fbeCurrentOffset);
        fbeValue.f43 = f43.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f44.FBEOffset(fbeCurrentOffset);
        fbeValue.f44 = f44.get(fbeFieldSize);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        return fbeCurrentSize;
    }

    // Set the struct value
    public long set(StructSimple fbeValue)
    {
        _buffer.shift(FBEOffset());
        long fbeSize = setFields(fbeValue);
        _buffer.unshift(FBEOffset());
        return fbeSize;
    }

    // Set the struct fields values
    public long setFields(StructSimple fbeValue)
    {
        long fbeCurrentOffset = 0;
        long fbeCurrentSize = 0;
        var fbeFieldSize = new Size(0);

        uid.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = uid.set(fbeValue.uid);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f1.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f1.set(fbeValue.f1);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f2.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f2.set(fbeValue.f2);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f3.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f3.set(fbeValue.f3);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f4.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f4.set(fbeValue.f4);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f5.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f5.set(fbeValue.f5);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f6.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f6.set(fbeValue.f6);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f7.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f7.set(fbeValue.f7);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f8.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f8.set(fbeValue.f8);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f9.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f9.set(fbeValue.f9);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f10.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f10.set(fbeValue.f10);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f11.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f11.set(fbeValue.f11);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f12.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f12.set(fbeValue.f12);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f13.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f13.set(fbeValue.f13);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f14.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f14.set(fbeValue.f14);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f15.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f15.set(fbeValue.f15);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f16.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f16.set(fbeValue.f16);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f17.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f17.set(fbeValue.f17);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f18.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f18.set(fbeValue.f18);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f19.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f19.set(fbeValue.f19);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f20.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f20.set(fbeValue.f20);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f21.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f21.set(fbeValue.f21);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f22.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f22.set(fbeValue.f22);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f23.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f23.set(fbeValue.f23);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f24.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f24.set(fbeValue.f24);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f25.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f25.set(fbeValue.f25);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f26.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f26.set(fbeValue.f26);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f27.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f27.set(fbeValue.f27);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f28.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f28.set(fbeValue.f28);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f29.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f29.set(fbeValue.f29);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f30.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f30.set(fbeValue.f30);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f31.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f31.set(fbeValue.f31);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f32.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f32.set(fbeValue.f32);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f33.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f33.set(fbeValue.f33);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f34.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f34.set(fbeValue.f34);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f35.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f35.set(fbeValue.f35);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f36.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f36.set(fbeValue.f36);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f37.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f37.set(fbeValue.f37);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f38.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f38.set(fbeValue.f38);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f39.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f39.set(fbeValue.f39);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f40.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f40.set(fbeValue.f40);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f41.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f41.set(fbeValue.f41);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f42.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f42.set(fbeValue.f42);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f43.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f43.set(fbeValue.f43);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        f44.FBEOffset(fbeCurrentOffset);
        fbeFieldSize.value = f44.set(fbeValue.f44);
        fbeCurrentOffset += fbeFieldSize.value;
        fbeCurrentSize += fbeFieldSize.value;

        return fbeCurrentSize;
    }
}
