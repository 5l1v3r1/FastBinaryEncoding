// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: test.fbe
// Version: 1.3.0.0

package test;

import java.io.*;
import java.lang.*;
import java.lang.reflect.*;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.*;
import java.time.*;
import java.util.*;

import fbe.*;
import proto.*;

public enum EnumEmptyEnum
{
    ;

    private int value;

    EnumEmptyEnum(int value) { this.value = (int)value; }
    EnumEmptyEnum(EnumEmptyEnum value) { this.value = value.value; }

    public int getRaw() { return value; }

    public static EnumEmptyEnum mapValue(int value) { return mapping.get(value); }

    @Override
    public String toString()
    {
        return "<unknown>";
    }

    private static final Map<Integer, EnumEmptyEnum> mapping = new HashMap<>();
    static
    {
        for (var value : EnumEmptyEnum.values())
            mapping.put(value.value, value);
    }
}
