// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: protoex.fbe
// Version: 1.3.0.0

package com.chronoxor.protoex.fbe;

import java.io.*;
import java.lang.*;
import java.lang.reflect.*;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.*;
import java.time.*;
import java.util.*;

import com.chronoxor.fbe.*;
import com.chronoxor.protoex.*;

// Fast Binary Encoding com.chronoxor.protoex final sender
public class FinalSender extends com.chronoxor.fbe.Sender
{
    // Imported senders
    public final com.chronoxor.proto.fbe.FinalSender protoSender;

    // Sender models accessors
    public final OrderFinalModel OrderModel;
    public final BalanceFinalModel BalanceModel;
    public final AccountFinalModel AccountModel;

    public FinalSender()
    {
        super(true);
        protoSender = new com.chronoxor.proto.fbe.FinalSender(getBuffer());
        OrderModel = new OrderFinalModel(getBuffer());
        BalanceModel = new BalanceFinalModel(getBuffer());
        AccountModel = new AccountFinalModel(getBuffer());
    }
    public FinalSender(Buffer buffer)
    {
        super(buffer, true);
        protoSender = new com.chronoxor.proto.fbe.FinalSender(getBuffer());
        OrderModel = new OrderFinalModel(getBuffer());
        BalanceModel = new BalanceFinalModel(getBuffer());
        AccountModel = new AccountFinalModel(getBuffer());
    }

    public long send(com.chronoxor.protoex.Order value)
    {
        // Serialize the value into the FBE stream
        long serialized = OrderModel.serialize(value);
        assert (serialized > 0) : "protoex.Order serialization failed!";
        assert OrderModel.verify() : "protoex.Order validation failed!";

        // Log the value
        if (getLogging())
        {
            String message = value.toString();
            onSendLog(message);
        }

        // Send the serialized value
        return sendSerialized(serialized);
    }
    public long send(com.chronoxor.protoex.Balance value)
    {
        // Serialize the value into the FBE stream
        long serialized = BalanceModel.serialize(value);
        assert (serialized > 0) : "protoex.Balance serialization failed!";
        assert BalanceModel.verify() : "protoex.Balance validation failed!";

        // Log the value
        if (getLogging())
        {
            String message = value.toString();
            onSendLog(message);
        }

        // Send the serialized value
        return sendSerialized(serialized);
    }
    public long send(com.chronoxor.protoex.Account value)
    {
        // Serialize the value into the FBE stream
        long serialized = AccountModel.serialize(value);
        assert (serialized > 0) : "protoex.Account serialization failed!";
        assert AccountModel.verify() : "protoex.Account validation failed!";

        // Log the value
        if (getLogging())
        {
            String message = value.toString();
            onSendLog(message);
        }

        // Send the serialized value
        return sendSerialized(serialized);
    }

    // Send message handler
    @Override
    protected long onSend(byte[] buffer, long offset, long size) { throw new UnsupportedOperationException("com.chronoxor.protoex.fbe.Sender.onSend() not implemented!"); }
}
